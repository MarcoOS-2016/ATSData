//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MainForm.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DashboardRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class DashboardRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FGAorPartNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SDSEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SellActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FGAorPartNo {
            get {
                return this.FGAorPartNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FGAorPartNoField, value) != true)) {
                    this.FGAorPartNoField = value;
                    this.RaisePropertyChanged("FGAorPartNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsActiveField, value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SDSEnabled {
            get {
                return this.SDSEnabledField;
            }
            set {
                if ((this.SDSEnabledField.Equals(value) != true)) {
                    this.SDSEnabledField = value;
                    this.RaisePropertyChanged("SDSEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKU {
            get {
                return this.SKUField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUField, value) != true)) {
                    this.SKUField = value;
                    this.RaisePropertyChanged("SKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesChannel {
            get {
                return this.SalesChannelField;
            }
            set {
                if ((this.SalesChannelField.Equals(value) != true)) {
                    this.SalesChannelField = value;
                    this.RaisePropertyChanged("SalesChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SellAction {
            get {
                return this.SellActionField;
            }
            set {
                if ((this.SellActionField.Equals(value) != true)) {
                    this.SellActionField = value;
                    this.RaisePropertyChanged("SellAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockStatus {
            get {
                return this.StockStatusField;
            }
            set {
                if ((this.StockStatusField.Equals(value) != true)) {
                    this.StockStatusField = value;
                    this.RaisePropertyChanged("StockStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dashboard", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class Dashboard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BufferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellColorDOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellColorEightDOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellColorOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellColorSevenDOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellColorTwentyEightDOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellColorTwentyFourDOSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommittedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayLowInventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EightHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtendedLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FGAIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FastTrackEligibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InOversellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InOversellOffLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryLevelOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryStatusOffLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryStockStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryStockStatusOffLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsFGAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LowStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfferTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OneHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalCellColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalCellColorOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalInventoryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalInventoryStatusOffLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OversoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PostCheckoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PreCheckoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreReservationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdActiveDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductCountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SDSEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesChannelDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesViewVisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellActionOffLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SevenDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ShipmentTransitQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StatusChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwentyEightDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwentyFourHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Buffer {
            get {
                return this.BufferField;
            }
            set {
                if ((this.BufferField.Equals(value) != true)) {
                    this.BufferField = value;
                    this.RaisePropertyChanged("Buffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Catalog {
            get {
                return this.CatalogField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogField, value) != true)) {
                    this.CatalogField = value;
                    this.RaisePropertyChanged("Catalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellColor {
            get {
                return this.CellColorField;
            }
            set {
                if ((object.ReferenceEquals(this.CellColorField, value) != true)) {
                    this.CellColorField = value;
                    this.RaisePropertyChanged("CellColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellColorDOS {
            get {
                return this.CellColorDOSField;
            }
            set {
                if ((object.ReferenceEquals(this.CellColorDOSField, value) != true)) {
                    this.CellColorDOSField = value;
                    this.RaisePropertyChanged("CellColorDOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellColorEightDOS {
            get {
                return this.CellColorEightDOSField;
            }
            set {
                if ((object.ReferenceEquals(this.CellColorEightDOSField, value) != true)) {
                    this.CellColorEightDOSField = value;
                    this.RaisePropertyChanged("CellColorEightDOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellColorOffline {
            get {
                return this.CellColorOfflineField;
            }
            set {
                if ((object.ReferenceEquals(this.CellColorOfflineField, value) != true)) {
                    this.CellColorOfflineField = value;
                    this.RaisePropertyChanged("CellColorOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellColorSevenDOS {
            get {
                return this.CellColorSevenDOSField;
            }
            set {
                if ((object.ReferenceEquals(this.CellColorSevenDOSField, value) != true)) {
                    this.CellColorSevenDOSField = value;
                    this.RaisePropertyChanged("CellColorSevenDOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellColorTwentyEightDOS {
            get {
                return this.CellColorTwentyEightDOSField;
            }
            set {
                if ((object.ReferenceEquals(this.CellColorTwentyEightDOSField, value) != true)) {
                    this.CellColorTwentyEightDOSField = value;
                    this.RaisePropertyChanged("CellColorTwentyEightDOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellColorTwentyFourDOS {
            get {
                return this.CellColorTwentyFourDOSField;
            }
            set {
                if ((object.ReferenceEquals(this.CellColorTwentyFourDOSField, value) != true)) {
                    this.CellColorTwentyFourDOSField = value;
                    this.RaisePropertyChanged("CellColorTwentyFourDOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Committed {
            get {
                return this.CommittedField;
            }
            set {
                if ((this.CommittedField.Equals(value) != true)) {
                    this.CommittedField = value;
                    this.RaisePropertyChanged("Committed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultLeadTime {
            get {
                return this.DefaultLeadTimeField;
            }
            set {
                if ((this.DefaultLeadTimeField.Equals(value) != true)) {
                    this.DefaultLeadTimeField = value;
                    this.RaisePropertyChanged("DefaultLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayLeadTime {
            get {
                return this.DisplayLeadTimeField;
            }
            set {
                if ((this.DisplayLeadTimeField.Equals(value) != true)) {
                    this.DisplayLeadTimeField = value;
                    this.RaisePropertyChanged("DisplayLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayLowInventory {
            get {
                return this.DisplayLowInventoryField;
            }
            set {
                if ((this.DisplayLowInventoryField.Equals(value) != true)) {
                    this.DisplayLowInventoryField = value;
                    this.RaisePropertyChanged("DisplayLowInventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EightHours {
            get {
                return this.EightHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.EightHoursField, value) != true)) {
                    this.EightHoursField = value;
                    this.RaisePropertyChanged("EightHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtendedLeadTime {
            get {
                return this.ExtendedLeadTimeField;
            }
            set {
                if ((this.ExtendedLeadTimeField.Equals(value) != true)) {
                    this.ExtendedLeadTimeField = value;
                    this.RaisePropertyChanged("ExtendedLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FGAId {
            get {
                return this.FGAIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FGAIdField, value) != true)) {
                    this.FGAIdField = value;
                    this.RaisePropertyChanged("FGAId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FastTrackEligible {
            get {
                return this.FastTrackEligibleField;
            }
            set {
                if ((object.ReferenceEquals(this.FastTrackEligibleField, value) != true)) {
                    this.FastTrackEligibleField = value;
                    this.RaisePropertyChanged("FastTrackEligible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InOversell {
            get {
                return this.InOversellField;
            }
            set {
                if ((this.InOversellField.Equals(value) != true)) {
                    this.InOversellField = value;
                    this.RaisePropertyChanged("InOversell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InOversellOffLine {
            get {
                return this.InOversellOffLineField;
            }
            set {
                if ((this.InOversellOffLineField.Equals(value) != true)) {
                    this.InOversellOffLineField = value;
                    this.RaisePropertyChanged("InOversellOffLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Inventory {
            get {
                return this.InventoryField;
            }
            set {
                if ((this.InventoryField.Equals(value) != true)) {
                    this.InventoryField = value;
                    this.RaisePropertyChanged("Inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryLevel {
            get {
                return this.InventoryLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryLevelField, value) != true)) {
                    this.InventoryLevelField = value;
                    this.RaisePropertyChanged("InventoryLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryLevelOffline {
            get {
                return this.InventoryLevelOfflineField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryLevelOfflineField, value) != true)) {
                    this.InventoryLevelOfflineField = value;
                    this.RaisePropertyChanged("InventoryLevelOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryStatus {
            get {
                return this.InventoryStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryStatusField, value) != true)) {
                    this.InventoryStatusField = value;
                    this.RaisePropertyChanged("InventoryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryStatusOffLine {
            get {
                return this.InventoryStatusOffLineField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryStatusOffLineField, value) != true)) {
                    this.InventoryStatusOffLineField = value;
                    this.RaisePropertyChanged("InventoryStatusOffLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryStockStatus {
            get {
                return this.InventoryStockStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryStockStatusField, value) != true)) {
                    this.InventoryStockStatusField = value;
                    this.RaisePropertyChanged("InventoryStockStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryStockStatusOffLine {
            get {
                return this.InventoryStockStatusOffLineField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryStockStatusOffLineField, value) != true)) {
                    this.InventoryStockStatusOffLineField = value;
                    this.RaisePropertyChanged("InventoryStockStatusOffLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsFGA {
            get {
                return this.IsFGAField;
            }
            set {
                if ((object.ReferenceEquals(this.IsFGAField, value) != true)) {
                    this.IsFGAField = value;
                    this.RaisePropertyChanged("IsFGA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LowStock {
            get {
                return this.LowStockField;
            }
            set {
                if ((this.LowStockField.Equals(value) != true)) {
                    this.LowStockField = value;
                    this.RaisePropertyChanged("LowStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OK {
            get {
                return this.OKField;
            }
            set {
                if ((this.OKField.Equals(value) != true)) {
                    this.OKField = value;
                    this.RaisePropertyChanged("OK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfferType {
            get {
                return this.OfferTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OfferTypeField, value) != true)) {
                    this.OfferTypeField = value;
                    this.RaisePropertyChanged("OfferType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OneHour {
            get {
                return this.OneHourField;
            }
            set {
                if ((object.ReferenceEquals(this.OneHourField, value) != true)) {
                    this.OneHourField = value;
                    this.RaisePropertyChanged("OneHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalCellColor {
            get {
                return this.OriginalCellColorField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalCellColorField, value) != true)) {
                    this.OriginalCellColorField = value;
                    this.RaisePropertyChanged("OriginalCellColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalCellColorOffline {
            get {
                return this.OriginalCellColorOfflineField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalCellColorOfflineField, value) != true)) {
                    this.OriginalCellColorOfflineField = value;
                    this.RaisePropertyChanged("OriginalCellColorOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalInventoryStatus {
            get {
                return this.OriginalInventoryStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalInventoryStatusField, value) != true)) {
                    this.OriginalInventoryStatusField = value;
                    this.RaisePropertyChanged("OriginalInventoryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalInventoryStatusOffLine {
            get {
                return this.OriginalInventoryStatusOffLineField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalInventoryStatusOffLineField, value) != true)) {
                    this.OriginalInventoryStatusOffLineField = value;
                    this.RaisePropertyChanged("OriginalInventoryStatusOffLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Oversold {
            get {
                return this.OversoldField;
            }
            set {
                if ((this.OversoldField.Equals(value) != true)) {
                    this.OversoldField = value;
                    this.RaisePropertyChanged("Oversold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PostCheckout {
            get {
                return this.PostCheckoutField;
            }
            set {
                if ((this.PostCheckoutField.Equals(value) != true)) {
                    this.PostCheckoutField = value;
                    this.RaisePropertyChanged("PostCheckout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PreCheckout {
            get {
                return this.PreCheckoutField;
            }
            set {
                if ((this.PreCheckoutField.Equals(value) != true)) {
                    this.PreCheckoutField = value;
                    this.RaisePropertyChanged("PreCheckout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreReservation {
            get {
                return this.PreReservationField;
            }
            set {
                if ((this.PreReservationField.Equals(value) != true)) {
                    this.PreReservationField = value;
                    this.RaisePropertyChanged("PreReservation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdActiveDetail {
            get {
                return this.ProdActiveDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdActiveDetailField, value) != true)) {
                    this.ProdActiveDetailField = value;
                    this.RaisePropertyChanged("ProdActiveDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductCountryId {
            get {
                return this.ProductCountryIdField;
            }
            set {
                if ((this.ProductCountryIdField.Equals(value) != true)) {
                    this.ProductCountryIdField = value;
                    this.RaisePropertyChanged("ProductCountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SDSEnabled {
            get {
                return this.SDSEnabledField;
            }
            set {
                if ((this.SDSEnabledField.Equals(value) != true)) {
                    this.SDSEnabledField = value;
                    this.RaisePropertyChanged("SDSEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKU {
            get {
                return this.SKUField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUField, value) != true)) {
                    this.SKUField = value;
                    this.RaisePropertyChanged("SKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesChannelDesc {
            get {
                return this.SalesChannelDescField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesChannelDescField, value) != true)) {
                    this.SalesChannelDescField = value;
                    this.RaisePropertyChanged("SalesChannelDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesChannelId {
            get {
                return this.SalesChannelIdField;
            }
            set {
                if ((this.SalesChannelIdField.Equals(value) != true)) {
                    this.SalesChannelIdField = value;
                    this.RaisePropertyChanged("SalesChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesViewVisibility {
            get {
                return this.SalesViewVisibilityField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesViewVisibilityField, value) != true)) {
                    this.SalesViewVisibilityField = value;
                    this.RaisePropertyChanged("SalesViewVisibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellAction {
            get {
                return this.SellActionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellActionField, value) != true)) {
                    this.SellActionField = value;
                    this.RaisePropertyChanged("SellAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellActionOffLine {
            get {
                return this.SellActionOffLineField;
            }
            set {
                if ((object.ReferenceEquals(this.SellActionOffLineField, value) != true)) {
                    this.SellActionOffLineField = value;
                    this.RaisePropertyChanged("SellActionOffLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SevenDays {
            get {
                return this.SevenDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.SevenDaysField, value) != true)) {
                    this.SevenDaysField = value;
                    this.RaisePropertyChanged("SevenDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ShipmentTransitQty {
            get {
                return this.ShipmentTransitQtyField;
            }
            set {
                if ((this.ShipmentTransitQtyField.Equals(value) != true)) {
                    this.ShipmentTransitQtyField = value;
                    this.RaisePropertyChanged("ShipmentTransitQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StatusChange {
            get {
                return this.StatusChangeField;
            }
            set {
                if ((this.StatusChangeField.Equals(value) != true)) {
                    this.StatusChangeField = value;
                    this.RaisePropertyChanged("StatusChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TwentyEightDays {
            get {
                return this.TwentyEightDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.TwentyEightDaysField, value) != true)) {
                    this.TwentyEightDaysField = value;
                    this.RaisePropertyChanged("TwentyEightDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TwentyFourHours {
            get {
                return this.TwentyFourHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.TwentyFourHoursField, value) != true)) {
                    this.TwentyFourHoursField = value;
                    this.RaisePropertyChanged("TwentyFourHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Application", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class Application : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Family", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class Family : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class Brand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductLineIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductLineID {
            get {
                return this.ProductLineIDField;
            }
            set {
                if ((this.ProductLineIDField.Equals(value) != true)) {
                    this.ProductLineIDField = value;
                    this.RaisePropertyChanged("ProductLineID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogRegion", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CatalogRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((this.CatalogIDField.Equals(value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductLine", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class ProductLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesViewFilter", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class SalesViewFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FamilyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductLineIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogID {
            get {
                return this.CatalogIDField;
            }
            set {
                if ((this.CatalogIDField.Equals(value) != true)) {
                    this.CatalogIDField = value;
                    this.RaisePropertyChanged("CatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogName {
            get {
                return this.CatalogNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogNameField, value) != true)) {
                    this.CatalogNameField = value;
                    this.RaisePropertyChanged("CatalogName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyID {
            get {
                return this.FamilyIDField;
            }
            set {
                if ((this.FamilyIDField.Equals(value) != true)) {
                    this.FamilyIDField = value;
                    this.RaisePropertyChanged("FamilyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLine {
            get {
                return this.ProductLineField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineField, value) != true)) {
                    this.ProductLineField = value;
                    this.RaisePropertyChanged("ProductLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductLineID {
            get {
                return this.ProductLineIDField;
            }
            set {
                if ((this.ProductLineIDField.Equals(value) != true)) {
                    this.ProductLineIDField = value;
                    this.RaisePropertyChanged("ProductLineID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PredefinedConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class PredefinedConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class ApplicationConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ConfigIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreDefinitionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PreDefinitionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConfigID {
            get {
                return this.ConfigIDField;
            }
            set {
                if ((this.ConfigIDField.Equals(value) != true)) {
                    this.ConfigIDField = value;
                    this.RaisePropertyChanged("ConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreDefinitionCode {
            get {
                return this.PreDefinitionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PreDefinitionCodeField, value) != true)) {
                    this.PreDefinitionCodeField = value;
                    this.RaisePropertyChanged("PreDefinitionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PreDefinitionID {
            get {
                return this.PreDefinitionIDField;
            }
            set {
                if ((this.PreDefinitionIDField.Equals(value) != true)) {
                    this.PreDefinitionIDField = value;
                    this.RaisePropertyChanged("PreDefinitionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class ConfigurationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool ActiveField;
        
        private int ApplicationIDField;
        
        private long ConfigIDField;
        
        private string ConfigNameField;
        
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PredefinitionCodeField;
        
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ConfigID {
            get {
                return this.ConfigIDField;
            }
            set {
                if ((this.ConfigIDField.Equals(value) != true)) {
                    this.ConfigIDField = value;
                    this.RaisePropertyChanged("ConfigID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PredefinitionCode {
            get {
                return this.PredefinitionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PredefinitionCodeField, value) != true)) {
                    this.PredefinitionCodeField = value;
                    this.RaisePropertyChanged("PredefinitionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class ConfigurationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Successful {
            get {
                return this.SuccessfulField;
            }
            set {
                if ((this.SuccessfulField.Equals(value) != true)) {
                    this.SuccessfulField = value;
                    this.RaisePropertyChanged("Successful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class RegionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKU {
            get {
                return this.SKUField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUField, value) != true)) {
                    this.SKUField = value;
                    this.RaisePropertyChanged("SKU");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionForNotification", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class RegionForNotification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProdNotificationRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class ProdNotificationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProdNotification", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class ProdNotification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NotificationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotificationType {
            get {
                return this.NotificationTypeField;
            }
            set {
                if ((this.NotificationTypeField.Equals(value) != true)) {
                    this.NotificationTypeField = value;
                    this.RaisePropertyChanged("NotificationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKU {
            get {
                return this.SKUField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUField, value) != true)) {
                    this.SKUField = value;
                    this.RaisePropertyChanged("SKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterCountry", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class MasterCountry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ATSRegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ATSRegionId {
            get {
                return this.ATSRegionIdField;
            }
            set {
                if ((this.ATSRegionIdField.Equals(value) != true)) {
                    this.ATSRegionIdField = value;
                    this.RaisePropertyChanged("ATSRegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterProductType", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class MasterProductType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterRegion", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class MasterRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((this.CatalogIdField.Equals(value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeField, value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterFullFillment", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class MasterFullFillment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullFillmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullFillmentDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullFillmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullFillmentCode {
            get {
                return this.FullFillmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FullFillmentCodeField, value) != true)) {
                    this.FullFillmentCodeField = value;
                    this.RaisePropertyChanged("FullFillmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullFillmentDescription {
            get {
                return this.FullFillmentDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FullFillmentDescriptionField, value) != true)) {
                    this.FullFillmentDescriptionField = value;
                    this.RaisePropertyChanged("FullFillmentDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullFillmentName {
            get {
                return this.FullFillmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullFillmentNameField, value) != true)) {
                    this.FullFillmentNameField = value;
                    this.RaisePropertyChanged("FullFillmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateCountryRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CreateCountryRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ATSRegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ATSRegionId {
            get {
                return this.ATSRegionIdField;
            }
            set {
                if ((this.ATSRegionIdField.Equals(value) != true)) {
                    this.ATSRegionIdField = value;
                    this.RaisePropertyChanged("ATSRegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateCountryResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CreateCountryResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CountryCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CountryCheck {
            get {
                return this.CountryCheckField;
            }
            set {
                if ((this.CountryCheckField.Equals(value) != true)) {
                    this.CountryCheckField = value;
                    this.RaisePropertyChanged("CountryCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRegionRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CreateRegionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((this.CatalogIdField.Equals(value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRegionResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CreateRegionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RegionCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RegionCheck {
            get {
                return this.RegionCheckField;
            }
            set {
                if ((this.RegionCheckField.Equals(value) != true)) {
                    this.RegionCheckField = value;
                    this.RaisePropertyChanged("RegionCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateFulFillmentLocationRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CreateFulFillmentLocationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FulFillmentLocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityCode {
            get {
                return this.FacilityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityCodeField, value) != true)) {
                    this.FacilityCodeField = value;
                    this.RaisePropertyChanged("FacilityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FulFillmentLocationName {
            get {
                return this.FulFillmentLocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FulFillmentLocationNameField, value) != true)) {
                    this.FulFillmentLocationNameField = value;
                    this.RaisePropertyChanged("FulFillmentLocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SequenceNumber {
            get {
                return this.SequenceNumberField;
            }
            set {
                if ((this.SequenceNumberField.Equals(value) != true)) {
                    this.SequenceNumberField = value;
                    this.RaisePropertyChanged("SequenceNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateFulFillmentLocationResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CreateFulFillmentLocationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FulFillmentCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FulFillmentLocationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FulFillmentCheck {
            get {
                return this.FulFillmentCheckField;
            }
            set {
                if ((this.FulFillmentCheckField.Equals(value) != true)) {
                    this.FulFillmentCheckField = value;
                    this.RaisePropertyChanged("FulFillmentCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FulFillmentLocationName {
            get {
                return this.FulFillmentLocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FulFillmentLocationNameField, value) != true)) {
                    this.FulFillmentLocationNameField = value;
                    this.RaisePropertyChanged("FulFillmentLocationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryStatusItem", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class InventoryStatusItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesChannelItem", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class SalesChannelItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalesChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SalesChannelIsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesChannelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SalesChannelId {
            get {
                return this.SalesChannelIdField;
            }
            set {
                if ((this.SalesChannelIdField.Equals(value) != true)) {
                    this.SalesChannelIdField = value;
                    this.RaisePropertyChanged("SalesChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SalesChannelIsActive {
            get {
                return this.SalesChannelIsActiveField;
            }
            set {
                if ((this.SalesChannelIsActiveField.Equals(value) != true)) {
                    this.SalesChannelIsActiveField = value;
                    this.RaisePropertyChanged("SalesChannelIsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesChannelName {
            get {
                return this.SalesChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesChannelNameField, value) != true)) {
                    this.SalesChannelNameField = value;
                    this.RaisePropertyChanged("SalesChannelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SellActionItem", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class SellActionItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchReservationDetailsRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class FetchReservationDetailsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductCountryIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCountryId {
            get {
                return this.ProductCountryIdField;
            }
            set {
                if ((this.ProductCountryIdField.Equals(value) != true)) {
                    this.ProductCountryIdField = value;
                    this.RaisePropertyChanged("ProductCountryId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchPostCheckoutDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class FetchPostCheckoutDetailsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MainForm.ServiceReference1.ReservationDetails[] ReservationDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainForm.ServiceReference1.ReservationDetails[] ReservationDetails {
            get {
                return this.ReservationDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservationDetailsField, value) != true)) {
                    this.ReservationDetailsField = value;
                    this.RaisePropertyChanged("ReservationDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservationDetails", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class ReservationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommittedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReservationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToFulfillCheckField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommittedOn {
            get {
                return this.CommittedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CommittedOnField, value) != true)) {
                    this.CommittedOnField = value;
                    this.RaisePropertyChanged("CommittedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IRN {
            get {
                return this.IRNField;
            }
            set {
                if ((object.ReferenceEquals(this.IRNField, value) != true)) {
                    this.IRNField = value;
                    this.RaisePropertyChanged("IRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberField, value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReservationID {
            get {
                return this.ReservationIDField;
            }
            set {
                if ((this.ReservationIDField.Equals(value) != true)) {
                    this.ReservationIDField = value;
                    this.RaisePropertyChanged("ReservationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReservedOn {
            get {
                return this.ReservedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservedOnField, value) != true)) {
                    this.ReservedOnField = value;
                    this.RaisePropertyChanged("ReservedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Segment {
            get {
                return this.SegmentField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentField, value) != true)) {
                    this.SegmentField = value;
                    this.RaisePropertyChanged("Segment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToFulfillCheck {
            get {
                return this.ToFulfillCheckField;
            }
            set {
                if ((object.ReferenceEquals(this.ToFulfillCheckField, value) != true)) {
                    this.ToFulfillCheckField = value;
                    this.RaisePropertyChanged("ToFulfillCheck");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FetchCommitDetailsResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class FetchCommitDetailsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MainForm.ServiceReference1.ReservationDetails[] ReservationDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainForm.ServiceReference1.ReservationDetails[] ReservationDetails {
            get {
                return this.ReservationDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservationDetailsField, value) != true)) {
                    this.ReservationDetailsField = value;
                    this.RaisePropertyChanged("ReservationDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FulfillOrdersRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class FulfillOrdersRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MainForm.ServiceReference1.OrderNumberDTO[] OrderNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductCountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainForm.ServiceReference1.OrderNumberDTO[] OrderNumbers {
            get {
                return this.OrderNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumbersField, value) != true)) {
                    this.OrderNumbersField = value;
                    this.RaisePropertyChanged("OrderNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCountryId {
            get {
                return this.ProductCountryIdField;
            }
            set {
                if ((this.ProductCountryIdField.Equals(value) != true)) {
                    this.ProductCountryIdField = value;
                    this.RaisePropertyChanged("ProductCountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderNumberDTO", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class OrderNumberDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((this.OrderNumberField.Equals(value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FulfillOrdersResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class FulfillOrdersResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelOrderRequest", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CancelOrderRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MainForm.ServiceReference1.OrderNumberDTO[] OrderNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MainForm.ServiceReference1.OrderNumberDTO[] OrderNumbers {
            get {
                return this.OrderNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumbersField, value) != true)) {
                    this.OrderNumbersField = value;
                    this.RaisePropertyChanged("OrderNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelOrderResponse", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.Dashboard")]
    [System.SerializableAttribute()]
    public partial class CancelOrderResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSucessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSucess {
            get {
                return this.IsSucessField;
            }
            set {
                if ((this.IsSucessField.Equals(value) != true)) {
                    this.IsSucessField = value;
                    this.RaisePropertyChanged("IsSucess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.dell.com/AvailableToSell/Dashboard", ConfigurationName="ServiceReference1.DashboardService")]
    public interface DashboardService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProducts", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductsA" +
            "TSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.Dashboard[] FetchProducts(MainForm.ServiceReference1.DashboardRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetApplication" +
            "List", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetApplication" +
            "ListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetApplication" +
            "ListATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.Application[] GetApplicationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetFamilies", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetFamiliesRes" +
            "ponse")]
        MainForm.ServiceReference1.Family[] GetFamilies(int CatalogID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetBrands", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetBrandsRespo" +
            "nse")]
        MainForm.ServiceReference1.Brand[] GetBrands(int CatalogID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetAllCatalogs" +
            "", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetAllCatalogs" +
            "Response")]
        MainForm.ServiceReference1.CatalogRegion[] GetAllCatalogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetProductLine" +
            "s", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetProductLine" +
            "sResponse")]
        MainForm.ServiceReference1.ProductLine[] GetProductLines(int CatalogID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetFilterInfo", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetFilterInfoR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetFilterInfoA" +
            "TSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.SalesViewFilter[] GetFilterInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetPredefinedV" +
            "alues", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetPredefinedV" +
            "aluesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetPredefinedV" +
            "aluesATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.PredefinedConfiguration[] GetPredefinedValues(long ConfigID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetRuleDetails" +
            "", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetRuleDetails" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetRuleDetails" +
            "ATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.ApplicationConfiguration GetRuleDetails(long configID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetRuleConfigu" +
            "rations", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetRuleConfigu" +
            "rationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetRuleConfigu" +
            "rationsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.ApplicationConfiguration[] GetRuleConfigurations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetConfigurati" +
            "onDetails", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetConfigurati" +
            "onDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetConfigurati" +
            "onDetailsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.ApplicationConfiguration GetConfigurationDetails(long configID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetApplication" +
            "Configurations", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetApplication" +
            "ConfigurationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/GetApplication" +
            "ConfigurationsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.ApplicationConfiguration[] GetApplicationConfigurations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/SaveConfigurat" +
            "ion", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/SaveConfigurat" +
            "ionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/SaveConfigurat" +
            "ionATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.ConfigurationResponse SaveConfiguration(MainForm.ServiceReference1.ConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchRegionFor" +
            "SKU", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchRegionFor" +
            "SKUResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchRegionFor" +
            "SKUATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.RegionForNotification FetchRegionForSKU(MainForm.ServiceReference1.RegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductNo" +
            "tification", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductNo" +
            "tificationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductNo" +
            "tificationATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.ProdNotification[] FetchProductNotification(MainForm.ServiceReference1.ProdNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchCountries" +
            "", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchCountries" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchCountries" +
            "ATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.MasterCountry[] FetchCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductTy" +
            "pes", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductTy" +
            "pesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchProductTy" +
            "pesATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.MasterProductType[] FetchProductTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchRegions", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchRegionsRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchRegionsAT" +
            "SFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.MasterRegion[] FetchRegions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchFullFillm" +
            "ent", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchFullFillm" +
            "entResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchFullFillm" +
            "entATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.MasterFullFillment[] FetchFullFillment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddCountries", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddCountriesRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddCountriesAT" +
            "SFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateCountryResponse AddCountries(MainForm.ServiceReference1.CreateCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateCountrie" +
            "s", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateCountrie" +
            "sResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateCountrie" +
            "sATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateCountryResponse UpdateCountries(MainForm.ServiceReference1.CreateCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteCountrie" +
            "s", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteCountrie" +
            "sResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteCountrie" +
            "sATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateCountryResponse DeleteCountries(MainForm.ServiceReference1.CreateCountryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddRegions", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddRegionsResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddRegionsATSF" +
            "aultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateRegionResponse AddRegions(MainForm.ServiceReference1.CreateRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateRegions", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateRegionsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateRegionsA" +
            "TSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateRegionResponse UpdateRegions(MainForm.ServiceReference1.CreateRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteRegions", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteRegionsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteRegionsA" +
            "TSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateRegionResponse DeleteRegions(MainForm.ServiceReference1.CreateRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddFulFillment" +
            "Locations", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddFulFillment" +
            "LocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/AddFulFillment" +
            "LocationsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateFulFillmentLocationResponse AddFulFillmentLocations(MainForm.ServiceReference1.CreateFulFillmentLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateFulFillm" +
            "entLocations", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateFulFillm" +
            "entLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/UpdateFulFillm" +
            "entLocationsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateFulFillmentLocationResponse UpdateFulFillmentLocations(MainForm.ServiceReference1.CreateFulFillmentLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteFulFillm" +
            "entLocations", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteFulFillm" +
            "entLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/DeleteFulFillm" +
            "entLocationsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CreateFulFillmentLocationResponse DeleteFulFillmentLocations(MainForm.ServiceReference1.CreateFulFillmentLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchInventory" +
            "Status", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchInventory" +
            "StatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchInventory" +
            "StatusATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.InventoryStatusItem[] FetchInventoryStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchSalesChan" +
            "nelStatus", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchSalesChan" +
            "nelStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchSalesChan" +
            "nelStatusATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.SalesChannelItem[] FetchSalesChannelStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchSellActio" +
            "ns", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchSellActio" +
            "nsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchSellActio" +
            "nsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.SellActionItem[] FetchSellActions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchPostCheck" +
            "outDetails", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchPostCheck" +
            "outDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchPostCheck" +
            "outDetailsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.FetchPostCheckoutDetailsResponse FetchPostCheckoutDetails(MainForm.ServiceReference1.FetchReservationDetailsRequest fetchReservationDetailsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchCommitDet" +
            "ails", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchCommitDet" +
            "ailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FetchCommitDet" +
            "ailsATSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.FetchCommitDetailsResponse FetchCommitDetails(MainForm.ServiceReference1.FetchReservationDetailsRequest fetchReservationDetailsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FulfillOrders", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FulfillOrdersR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/FulfillOrdersA" +
            "TSFaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.FulfillOrdersResponse FulfillOrders(MainForm.ServiceReference1.FulfillOrdersRequest fulfillOrdersRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/CancelOrder", ReplyAction="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/CancelOrderRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ATSData.ATSDataService.ATSFaultDataContract), Action="http://schemas.dell.com/AvailableToSell/Dashboard/DashboardService/CancelOrderATS" +
            "FaultDataContractFault", Name="ATSFaultDataContract", Namespace="http://schemas.datacontract.org/2004/07/Dell.AvailableToSell.Services.FaultContra" +
            "ct")]
        MainForm.ServiceReference1.CancelOrderResponse CancelOrder(MainForm.ServiceReference1.CancelOrderRequest CancelOrderRequese);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DashboardServiceChannel : MainForm.ServiceReference1.DashboardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DashboardServiceClient : System.ServiceModel.ClientBase<MainForm.ServiceReference1.DashboardService>, MainForm.ServiceReference1.DashboardService {
        
        public DashboardServiceClient() {
        }
        
        public DashboardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DashboardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MainForm.ServiceReference1.Dashboard[] FetchProducts(MainForm.ServiceReference1.DashboardRequest request) {
            return base.Channel.FetchProducts(request);
        }
        
        public MainForm.ServiceReference1.Application[] GetApplicationList() {
            return base.Channel.GetApplicationList();
        }
        
        public MainForm.ServiceReference1.Family[] GetFamilies(int CatalogID) {
            return base.Channel.GetFamilies(CatalogID);
        }
        
        public MainForm.ServiceReference1.Brand[] GetBrands(int CatalogID) {
            return base.Channel.GetBrands(CatalogID);
        }
        
        public MainForm.ServiceReference1.CatalogRegion[] GetAllCatalogs() {
            return base.Channel.GetAllCatalogs();
        }
        
        public MainForm.ServiceReference1.ProductLine[] GetProductLines(int CatalogID) {
            return base.Channel.GetProductLines(CatalogID);
        }
        
        public MainForm.ServiceReference1.SalesViewFilter[] GetFilterInfo() {
            return base.Channel.GetFilterInfo();
        }
        
        public MainForm.ServiceReference1.PredefinedConfiguration[] GetPredefinedValues(long ConfigID) {
            return base.Channel.GetPredefinedValues(ConfigID);
        }
        
        public MainForm.ServiceReference1.ApplicationConfiguration GetRuleDetails(long configID) {
            return base.Channel.GetRuleDetails(configID);
        }
        
        public MainForm.ServiceReference1.ApplicationConfiguration[] GetRuleConfigurations() {
            return base.Channel.GetRuleConfigurations();
        }
        
        public MainForm.ServiceReference1.ApplicationConfiguration GetConfigurationDetails(long configID) {
            return base.Channel.GetConfigurationDetails(configID);
        }
        
        public MainForm.ServiceReference1.ApplicationConfiguration[] GetApplicationConfigurations() {
            return base.Channel.GetApplicationConfigurations();
        }
        
        public MainForm.ServiceReference1.ConfigurationResponse SaveConfiguration(MainForm.ServiceReference1.ConfigurationRequest request) {
            return base.Channel.SaveConfiguration(request);
        }
        
        public MainForm.ServiceReference1.RegionForNotification FetchRegionForSKU(MainForm.ServiceReference1.RegionRequest request) {
            return base.Channel.FetchRegionForSKU(request);
        }
        
        public MainForm.ServiceReference1.ProdNotification[] FetchProductNotification(MainForm.ServiceReference1.ProdNotificationRequest request) {
            return base.Channel.FetchProductNotification(request);
        }
        
        public MainForm.ServiceReference1.MasterCountry[] FetchCountries() {
            return base.Channel.FetchCountries();
        }
        
        public MainForm.ServiceReference1.MasterProductType[] FetchProductTypes() {
            return base.Channel.FetchProductTypes();
        }
        
        public MainForm.ServiceReference1.MasterRegion[] FetchRegions() {
            return base.Channel.FetchRegions();
        }
        
        public MainForm.ServiceReference1.MasterFullFillment[] FetchFullFillment() {
            return base.Channel.FetchFullFillment();
        }
        
        public MainForm.ServiceReference1.CreateCountryResponse AddCountries(MainForm.ServiceReference1.CreateCountryRequest request) {
            return base.Channel.AddCountries(request);
        }
        
        public MainForm.ServiceReference1.CreateCountryResponse UpdateCountries(MainForm.ServiceReference1.CreateCountryRequest request) {
            return base.Channel.UpdateCountries(request);
        }
        
        public MainForm.ServiceReference1.CreateCountryResponse DeleteCountries(MainForm.ServiceReference1.CreateCountryRequest request) {
            return base.Channel.DeleteCountries(request);
        }
        
        public MainForm.ServiceReference1.CreateRegionResponse AddRegions(MainForm.ServiceReference1.CreateRegionRequest request) {
            return base.Channel.AddRegions(request);
        }
        
        public MainForm.ServiceReference1.CreateRegionResponse UpdateRegions(MainForm.ServiceReference1.CreateRegionRequest request) {
            return base.Channel.UpdateRegions(request);
        }
        
        public MainForm.ServiceReference1.CreateRegionResponse DeleteRegions(MainForm.ServiceReference1.CreateRegionRequest request) {
            return base.Channel.DeleteRegions(request);
        }
        
        public MainForm.ServiceReference1.CreateFulFillmentLocationResponse AddFulFillmentLocations(MainForm.ServiceReference1.CreateFulFillmentLocationRequest request) {
            return base.Channel.AddFulFillmentLocations(request);
        }
        
        public MainForm.ServiceReference1.CreateFulFillmentLocationResponse UpdateFulFillmentLocations(MainForm.ServiceReference1.CreateFulFillmentLocationRequest request) {
            return base.Channel.UpdateFulFillmentLocations(request);
        }
        
        public MainForm.ServiceReference1.CreateFulFillmentLocationResponse DeleteFulFillmentLocations(MainForm.ServiceReference1.CreateFulFillmentLocationRequest request) {
            return base.Channel.DeleteFulFillmentLocations(request);
        }
        
        public MainForm.ServiceReference1.InventoryStatusItem[] FetchInventoryStatus() {
            return base.Channel.FetchInventoryStatus();
        }
        
        public MainForm.ServiceReference1.SalesChannelItem[] FetchSalesChannelStatus() {
            return base.Channel.FetchSalesChannelStatus();
        }
        
        public MainForm.ServiceReference1.SellActionItem[] FetchSellActions() {
            return base.Channel.FetchSellActions();
        }
        
        public MainForm.ServiceReference1.FetchPostCheckoutDetailsResponse FetchPostCheckoutDetails(MainForm.ServiceReference1.FetchReservationDetailsRequest fetchReservationDetailsRequest) {
            return base.Channel.FetchPostCheckoutDetails(fetchReservationDetailsRequest);
        }
        
        public MainForm.ServiceReference1.FetchCommitDetailsResponse FetchCommitDetails(MainForm.ServiceReference1.FetchReservationDetailsRequest fetchReservationDetailsRequest) {
            return base.Channel.FetchCommitDetails(fetchReservationDetailsRequest);
        }
        
        public MainForm.ServiceReference1.FulfillOrdersResponse FulfillOrders(MainForm.ServiceReference1.FulfillOrdersRequest fulfillOrdersRequest) {
            return base.Channel.FulfillOrders(fulfillOrdersRequest);
        }
        
        public MainForm.ServiceReference1.CancelOrderResponse CancelOrder(MainForm.ServiceReference1.CancelOrderRequest CancelOrderRequese) {
            return base.Channel.CancelOrder(CancelOrderRequese);
        }
    }
}
